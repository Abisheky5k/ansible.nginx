---
# tasks file for sbaerlocher.nginx

- name: add OS specific variables
  include_vars: "{{ item }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
        - "default.yml"
      paths: vars
  tags:
    - configuration
    - packages

- name: add official nginx repo
  yum_repository:
    name: nginx
    description: official nginx repo
    baseurl: http://nginx.org/packages/centos/$releasever/$basearch/
    gpgcheck: no
    enabled: yes
  when: ansible_distribution == 'CentOS'
  tags:
    - packages

- name: install nginx
  package:
    name: nginx
  notify:
    - start nginx
    - enabled nginx
  tags:
    - packages

- name: configuring nginx
  template:
    src: nginx.j2
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart nginx
    - enabled nginx
  tags:
    - configuration

- name: adding conf.d
  template:
    src: "conf/{{ item }}.j2"
    dest: "/etc/nginx/conf.d/{{ item }}.conf"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - ssl
    - ssl-stapling
    - gzip_static
    - gzip
    - fastcgi
  notify:
    - restart nginx
    - enabled nginx
  tags:
    - configuration

- name: creates directory sites-available
  file:
    path: /etc/nginx/sites-available
    state: directory
  tags:
    - configuration

- name: creates directory sites-enabled
  file:
    path: /etc/nginx/sites-enabled
    state: directory
  tags:
    - configuration

- name: removing default host
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/nginx/sites-available/default
  tags:
    - configuration

- name: configuring sites
  template:
    src: site.j2
    dest: "/etc/nginx/sites-available/{{ item.site }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - "{{ sites }}"
  notify:
    - restart nginx
    - enabled nginx
  when: item.site is defined
  tags:
    - configuration

- name: disable sites
  file:
    path: "/etc/nginx/sites-enabled/{{ item.site }}"
    state: absent
  when: item.enabled == 0
  with_items:
    - "{{ sites }}"
  notify:
    - restart nginx
    - enabled nginx
  tags:
    - configuration

- name: enabling sites
  file:
    src: "/etc/nginx/sites-available/{{ item.site }}"
    dest: "/etc/nginx/sites-enabled/{{ item.site }}"
    owner: root
    group: root
    mode: "0644"
    state: link
  when: item.enabled == 1
  with_items:
    - "{{ sites }}"
  notify:
    - restart nginx
    - enabled nginx
  tags:
    - configuration

- name: Creates directory
  file:
    path: "/home/{{ item.site }}"
    state: directory
  with_items: "{{ sites }}"
  when: item.site is defined
  tags:
    - configuration

- block:
    - name: Creates SSL Home
      file: path=/etc/ssl/nginx/{{ item.site }} state=directory mode=0644
      with_items: "{{ sites }}"
    - name: Creates Certbot zert
      file: src=/etc/letsencrypt/live/{{ item.site }}/fullchain.pem dest=/etc/ssl/nginx/{{ item.site }}/{{ item.site }}.pem state=link mode=0644
      with_items: "{{ sites }}"
      when: item.nginx.certbot == 1
    - name: Creates Certbot key
      file: src=/etc/letsencrypt/live/{{ item.site }}/privkey.pem dest=/etc/ssl/nginx/{{ item.site }}/{{ item.site }}.key state=link mode=0644
      with_items: "{{ sites }}"
      when: item.nginx.certbot == 1
    - name: Creates default zert
      file: src=/etc/ssl/nginx/{{ nginx_default_ssl }}/{{ nginx_default_ssl }}.pem dest=/etc/ssl/nginx/{{ item.site }}/{{ item.site }}.pem state=link mode=0644
      with_items: "{{ sites }}"
      when: item.nginx.certbot == 0
    - name: Creates default key
      file: src=/etc/ssl/nginx/{{ nginx_default_ssl }}/{{ nginx_default_ssl }}.key dest=/etc/ssl/nginx/{{ item.site }}/{{ item.site }}.key state=link mode=0644
      with_items: "{{ sites }}"
      when: item.nginx.certbot == 0
  when: item.nginx.ssl == 1 and nginx_default_ssl != item.site
  tags:
    - configuration

- name: Generate DHE key-exchange
  become: yes
  command: openssl dhparam -dsaparam -out /etc/ssl/certs/dhparam.pem 4096 creates=/etc/ssl/certs/dhparam.pem
  notify:
    - restart nginx
    - enabled nginx
  tags:
    - configuration
